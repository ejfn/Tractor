name: EAS Build APK

on:
  release:
    types: [released]

permissions:
  contents: write

jobs:
  build:
    name: Build Production APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run quality checks
      run: npm run qualitycheck

    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}

    - name: Detect version and inject into app.json
      id: version
      uses: ./.github/actions/git-version

    - name: Build APK
      run: eas build --platform android --profile production --non-interactive --wait

    - name: Get build artifact URL
      id: build-url
      run: |
        # Get the latest build for this project
        BUILD_URL=$(eas build:list --platform android --limit 1 --json --non-interactive | jq -r '.[0].artifacts.buildUrl')
        echo "build_url=$BUILD_URL" >> $GITHUB_OUTPUT
        echo "Build URL: $BUILD_URL"

    - name: Download APK
      run: |
        curl -L -o tractor-${{ steps.version.outputs.version }}.apk "${{ steps.build-url.outputs.build_url }}"

    - name: Upload APK to Release
      uses: softprops/action-gh-release@v2
      with:
        files: tractor-${{ steps.version.outputs.version }}.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

