name: 'Git Version'
description: 'Detect version from GitHub context and inject into app.json for EAS workflows'

outputs:
  version:
    description: 'The detected version with git hash (e.g., v1.0.0+abc1234)'
    value: ${{ steps.detect.outputs.version }}
  eas-branch:
    description: 'EAS Update branch'
    value: ${{ steps.detect.outputs.eas-branch }}

runs:
  using: 'composite'
  steps:
    - name: Detect version and context
      id: detect
      shell: bash
      run: |
        # Get git info
        GIT_COMMIT=$(git rev-parse HEAD)
        GIT_HASH_SHORT=$(git rev-parse --short HEAD)
        
        # Get base version and commit count (only look for version tags)
        LAST_TAG=$(git tag -l "v*.*.*" --sort=-version:refname | head -n1 || echo "")
        if [[ -n "$LAST_TAG" ]]; then
          BASE_VERSION=${LAST_TAG#v}
          COMMIT_COUNT=$(git rev-list --count ${LAST_TAG}..HEAD)
        else
          BASE_VERSION="1.0.0"
          COMMIT_COUNT=$(git rev-list --count HEAD)
        fi
        
        if [ "${{ github.event_name }}" = "release" ]; then
          # Release event
          VERSION="${{ github.event.release.tag_name }}+${GIT_HASH_SHORT}"
          EAS_BRANCH="production"
          
        elif [[ ${{ github.ref }} == refs/tags/v* ]]; then
          # Tag push
          VERSION="${{ github.ref_name }}+${GIT_HASH_SHORT}"
          EAS_BRANCH="production"
          
        elif [[ ${{ github.ref }} == refs/heads/main ]]; then
          # Main branch push
          VERSION="v${BASE_VERSION}-beta.${COMMIT_COUNT}+${GIT_HASH_SHORT}"
          EAS_BRANCH="beta"
          
        else
          # Other branch (manual trigger)
          BRANCH_NAME="${{ github.event.inputs.branch_name }}"
          if [[ -z "$BRANCH_NAME" ]]; then
            BRANCH_NAME=${{ github.ref }}
            BRANCH_NAME=${BRANCH_NAME#refs/heads/}
          fi
          VERSION="v${BASE_VERSION}-alpha.${COMMIT_COUNT}+${GIT_HASH_SHORT}"
          EAS_BRANCH="alpha"
        fi
        
        # Set all outputs
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "git-hash-short=$GIT_HASH_SHORT" >> $GITHUB_OUTPUT
        echo "git-commit=$GIT_COMMIT" >> $GITHUB_OUTPUT
        echo "eas-branch=$EAS_BRANCH" >> $GITHUB_OUTPUT
        
        # Verbose output for debugging
        echo "Final outputs:"
        echo "  version: $VERSION"
        echo "  git-hash-short: $GIT_HASH_SHORT"
        echo "  git-commit: $GIT_COMMIT"
        echo "  eas-branch: $EAS_BRANCH"

    - name: Inject version into app.json
      shell: bash
      run: |
        jq '.expo.version = "${{ steps.detect.outputs.version }}" | .expo.extra.version = "${{ steps.detect.outputs.version }}" | .expo.extra.gitCommit = "${{ steps.detect.outputs.git-commit }}"' app.json > app.json.tmp
        mv app.json.tmp app.json
        echo "Injected version ${{ steps.detect.outputs.version }} into app.json"
